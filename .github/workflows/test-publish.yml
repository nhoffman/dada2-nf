name: Run pipeline tests on PRs and deploy to registry

on:
  push:
    branches:
      - "*"
    tags:
      - '[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'
      - '.+-rc[0-9]'
  pull_request:
    branches:
      - $default-branch

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      # - name: Build and export to Docker
      #     uses: docker/build-push-action@v6
      #     with:
      #       load: true
      #       tags: ${{ env.TEST_TAG }}
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    - run: |
        cd /usr/local/bin/
        wget -qO - https://github.com/nextflow-io/nextflow/releases/download/v24.04.3/nextflow | bash
    - run: nextflow -quiet run main.nf -params-file test/minimal/params.json -without-docker -profile local
    - run: nextflow -quiet run main.nf -params-file test/its/params.json -without-docker -profile local
    - run: nextflow -quiet run main.nf -params-file test/noindex/params.json -without-docker -profile local
    - run: nextflow -quiet run main.nf -params-file test/single/cmsearch/params.json -without-docker -profile local
    - run: nextflow -quiet run main.nf -params-file test/single/vsearch/params.json -without-docker -profile local
    - run: nextflow -quiet run main.nf -params-file test/minimal/params.json -without-docker -profile local --manifest test/minimal/manifest.csv
    - run: nextflow -quiet run main.nf -params-file test/its/params.json -without-docker -profile local --manifest test/its/manifest.csv
    - run: nextflow -quiet run main.nf -params-file test/noindex/params.json -without-docker -profile local --manifest test/noindex/manifest.csv
    - run: nextflow -quiet run main.nf -params-file test/single/cmsearch/params.json -without-docker -profile local --manifest test/single/manifest.csv
    - run: nextflow -quiet run main.nf -params-file test/single/vsearch/params.json -without-docker -profile local --manifest test/single/manifest.csv
    - run: |
        cd test/ungs/
        ./test_combine_svs.sh

  deploy:
    if: github.ref_type == 'tag'
    needs: [test]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push
      id: build-and-push
      uses: docker/build-push-action@v6
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: "{{defaultContext}}:docker"
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
